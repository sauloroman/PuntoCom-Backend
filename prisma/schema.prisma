generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum Role {
  Administrador
  Supervisor
  Vendedor
}

enum AdjustmentType {
  entrada
  salida
}

model Product {
  product_id          Int       @id @default(autoincrement())
  product_name        String    @unique @db.VarChar(100)
  product_description String    @default("Producto sin descripción") @db.VarChar(220)
  product_image       String    @default("Producto sin imagen") @db.VarChar(200)
  product_code        String    @unique @db.VarChar(15)
  product_selling_price Decimal    @db.Decimal(11, 2)
  product_stock       Int
  product_stock_min   Int
  product_createdAt   DateTime  @default(now())
  product_updatedAt   DateTime  @updatedAt
  product_is_active   Boolean   @default(true)
  category_id         Int
  supplier_id         Int

  category            Category  @relation(fields: [category_id], references: [category_id])
  supplier            Supplier  @relation(fields: [supplier_id], references: [supplier_id])
  purchases           PurchaseDetail[]
  sales               SaleProductDetail[]
  inventoryAdjustments InventoryAdjustment[]
}

model Category {
  category_id          Int       @id @default(autoincrement())
  category_name        String    @unique @db.VarChar(100)
  category_description String    @default("Categoría sin descripción") @db.VarChar(220)
  category_icon        String    @default("Categoría sin ícono") @db.VarChar(100)
  category_is_active   Boolean   @default(true)
  category_createdAt   DateTime  @default(now())
  category_updatedAt   DateTime  @updatedAt

  products             Product[]
}

model Supplier {
  supplier_id          Int       @id @default(autoincrement())
  supplier_name        String    @db.VarChar(100)
  supplier_lastname    String    @db.VarChar(100)
  supplier_company     String    @unique @db.VarChar(100)
  supplier_phone       String    @default("Proveedor sin teléfono") @db.VarChar(12)
  supplier_email       String    @unique @default("Proveedor sin correo") @db.VarChar(100)
  supplier_address     String    @default("Proveedor sin dirección") @db.VarChar(200)
  supplier_is_active   Boolean   @default(true)
  supplier_createdAt   DateTime  @default(now())
  supplier_updatedAt   DateTime  @updatedAt

  purchases            Purchase[]
  products             Product[]
}

model Purchase {
  purchase_id    Int              @id @default(autoincrement())
  purchase_date  DateTime         @default(now())
  purchase_total Decimal            @db.Decimal(11, 2)
  supplier_id    Int
  user_id        Int

  supplier       Supplier         @relation(fields: [supplier_id], references: [supplier_id])
  user           User             @relation(fields: [user_id], references: [user_id])
  details        PurchaseDetail[]
}

model PurchaseDetail {
  purchase_detail_id Int      @id @default(autoincrement())
  purchase_quantity  Int
  purchase_unit_price Decimal    @db.Decimal(11, 2)
  product_id         Int
  purchase_id        Int

  product            Product  @relation(fields: [product_id], references: [product_id])
  purchase           Purchase @relation(fields: [purchase_id], references: [purchase_id])
}

model Sale {
  sale_id     Int              @id @default(autoincrement())
  sale_date   DateTime         @default(now())
  sale_total  Decimal            @db.Decimal(11, 2)
  user_id     Int

  user        User             @relation(fields: [user_id], references: [user_id])
  details     SaleProductDetail[]
}

model SaleProductDetail {
  sale_product_detail_id Int      @id @default(autoincrement())
  sale_product_detail_quantity Int
  sale_product_detail_unit_price Decimal  @db.Decimal(11, 2)
  sale_product_discount  Decimal     @default(0.0) @db.Decimal(11, 2)
  sale_id               Int
  product_id            Int

  sale                  Sale      @relation(fields: [sale_id], references: [sale_id])
  product               Product   @relation(fields: [product_id], references: [product_id])
}

model User {
  user_id         Int       @id @default(autoincrement())
  user_name       String    @db.VarChar(60)
  user_lastname   String    @db.VarChar(60)
  user_email      String    @unique @db.VarChar(200)
  user_password   String    @db.VarChar(100)
  user_is_active  Boolean   @default(true)
  user_createdAt  DateTime  @default(now())
  user_updatedAt  DateTime  @updatedAt
  role            Role

  purchases       Purchase[]
  sales          Sale[]
  inventoryAdjustments InventoryAdjustment[]
}

model InventoryAdjustment {
  adjustment_id      Int          @id @default(autoincrement())
  product_id         Int
  adjustment_type    AdjustmentType
  adjustment_quantity Int
  adjustment_reason  String       @db.VarChar(255)
  user_id            Int
  adjustment_date    DateTime     @default(now())

  product            Product      @relation(fields: [product_id], references: [product_id])
  user               User         @relation(fields: [user_id], references: [user_id])
}